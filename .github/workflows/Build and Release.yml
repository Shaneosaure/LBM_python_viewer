name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        git submodule update --init
        pip install -r lbm/requirements.txt
        pip install pyinstaller

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --noconsole --onefile main.py

    - name: Move main.exe to Inno Setup directory
      run: |
        mv dist/main.exe .
        mv Images/logo.ico .
        
    - name: Clean up files and folders
      run: |
        rm -r .github 
        rm -r Demo 
        rm -r Images
        rm -r lbm/.github 
        rm -r lbm/lbm/save 
        rm -r build/
        rm -r dist/
        rm .gitignore 
        rm .gitmodules 
        rm test.py 
        rm README.md 
        rm lbm/.gitignore 
        rm lbm/LICENSE 
        rm lbm/README.md 

    - name: Run Inno Setup
      run: |
        iscc /O"output_directory" "installer_script.iss"

    - name: Upload Inno Setup Artifact
      uses: actions/upload-artifact@v4
      with:
        name: LBM_python_viewer-setup
        path: output_directory/LBM_python_viewer.exe

  release:
    name: Release Setup
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: windows-latest
    steps:
      - name: Download Setup from build
        uses: actions/download-artifact@v4
        with:
          name: LBM_python_viewer-setup

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }} 

      - name: Upload Release Setup
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: LBM_python_viewer.exe
          asset_name: LBM_python_viewer-setup.exe
          asset_content_type: application/zip
